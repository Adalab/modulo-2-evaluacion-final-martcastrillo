{"version":3,"sources":["00_main.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["\"use strict\";\n\n// Variables qSelector\nconst characterList = document.querySelector('.js_character_list');\nconst favoriteList = document.querySelector('.js-favorite-list');\nconst searchBtn = document.querySelector('.js_btn');\nconst searchInput = document.querySelector('.js_search');\nconst form = document.querySelector('.js_form');\nconst resetBtn = document.querySelector('.js_reset_btn');\n//Variables\n\nlet allCharacters = [];\nlet favoritesCharacters = [];\n\n//Funciones\n\nfunction renderOneCharacter(character) {\n\n  let classSelected = '';\n  //busqueda para saber la posicion en favoritos si la tarjeta está en favoritos\n  const characterInFavsIndex = favoritesCharacters.findIndex((charac) => charac.char_id === parseInt(character.char_id));\n  //si la busqueda es -1 es decir que no lo encuentra, entonces lo añade \n  if (characterInFavsIndex === -1) {\n\n    classSelected = '';\n    console.log('hello');\n    console.log('hello');\n  }\n  // si la busqueda da un index es que si lo encuentra y entonces, debe quitarlo\n  else {\n    console.log('gbye');\n    classSelected = 'selected';\n  }\n  // atributo gancho char_id para poder trabajar luego con el currentTarget \n  let html = `<li>\n    <article class=\"js_article ${classSelected} card\" id=\"${character.char_id}\">\n    <span class=\"photobox\">\n      <img class=\"card_img\"\n        src=\"${character.img}\"\n        alt=\"characterImage\">\n        </span>\n        <div class =\"text\">\n          <h3 class=\"card_name\">${character.name}</h3>\n          <h3 class=\"card_status\">${character.status}</h3>\n        </div>\n    </article>\n    </li>`;\n  return html;\n}\nfunction addCharacterListeners() {\n  const allCards = document.querySelectorAll('.js_article');\n  for (const eachCard of allCards) {\n    eachCard.addEventListener('click', handleClick);\n  }\n}\n\nfunction renderfavoriteCh() {\n  let html = '';\n  for (const eachCharacter of favoritesCharacters) {\n    html += renderOneCharacter(eachCharacter);\n  }\n  favoriteList.innerHTML = html;\n}\n\nfunction renderAllCharacters(characters) {\n  let html = '';\n  for (const eachCharacter of characters) {\n    html += renderOneCharacter(eachCharacter);\n  }\n  characterList.innerHTML = html;\n  //por ser un qSAll nos dá un array\n  const characterCard = document.querySelectorAll('.js_article');\n  //para recorrer el array que genera el qSAll asigna con el bucle el evento\n  /* for (const eachCard of characterCard) {\n    eachCard.addEventListener('click', handleClick);\n  } */\n  addCharacterListeners();\n}\n\naddCharacterListeners();\n\nfunction handleClick(event) {\n  //evento para concretamente que el currentTarget sobre donde está el evento, \n  //en nuestro caso en cada tarjeta\n  event.currentTarget.classList.toggle('selected');\n  //busca en el array aquel objeto que tiene el mismo char_id  que el id parseado del current Target\n  const selectedCh = allCharacters.find((charac) => charac.char_id === parseInt(event.currentTarget.id));\n\n  //busqueda para saber la posicion en favoritos si la tarjeta está en favoritos\n  const characterInFavsIndex = favoritesCharacters.findIndex((charac) => charac.char_id === parseInt(event.currentTarget.id));\n  //si la busqueda es -1 es decir que no lo encuentra, entonces lo añade \n  if (characterInFavsIndex === -1) {\n    //rellena el array de favoritos con lo qhe ha encontrado\n    favoritesCharacters.push(selectedCh);\n\n  }\n  // si la busqueda da un index es que si lo encuentra y entonces, debe quitarlo\n  else {\n    favoritesCharacters.splice(characterInFavsIndex, 1);\n  }\n  localStorage.setItem('favoriteCharacter', JSON.stringify(favoritesCharacters));\n  console.log(favoritesCharacters);\n  renderfavoriteCh();\n\n}\n//Eventos\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n})\nsearchBtn.addEventListener('click', () => {\n  const userSearch = searchInput.value.toLowerCase();\n\n  console.log(userSearch);\n  //variable para meter los personajes que coincidan con la busqueda\n  const filteredCharacters = allCharacters.filter((eachCharacter) => eachCharacter.name.toLowerCase().includes(userSearch));\n  const filteredCharactersStatus = allCharacters.filter((eachCharacter) => eachCharacter.status.toLowerCase().includes(userSearch));\n  ///////\n  console.log(filteredCharacters);\n  //pinta los personajes filtrados\n  renderAllCharacters(filteredCharacters);\n  renderAllCharacters(filteredCharactersStatus);\n\n})\n\nresetBtn.addEventListener(\"click\", (event) => {\n\tevent.preventDefault();\n  favoritesCharacters = [];\n  let html = '';\n  favoriteList.innerHTML = html;\n})\n\n\n//código que que ejecuta al inicio de carga de la pagina\n\nfetch('https://breakingbadapi.com/api/characters')\n  .then((response) => response.json())\n  .then((data) => {\n    allCharacters = data;\n    renderAllCharacters(allCharacters);\n\n  });\n\nconst savedFavorites = JSON.parse(localStorage.getItem('favoriteCharacter'));\n\n//despues de un get item hacemos un if para comprobar si hay o no algo en local storage\nif (savedFavorites !== null) {\n  favoritesCharacters = savedFavorites;\n  renderfavoriteCh();\n}\n"]}