{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["\"use strict\";\n\n// Variables qSelector\nconst characterList = document.querySelector('.js_character_list');\nconst favoriteList = document.querySelector('.js-favorite-list');\nconst searchInput = document.querySelector('.js_search');\nconst form = document.querySelector('.js_form');\n//Variables\n\nlet allCharacters =[];\nlet favoritesCharacters =[];\n\n//Funciones\n//   atributo gancho para poder trabajar luego con el currentTarget \nfunction renderCharacter (character) {\n    let html = `<li>\n    <article class=\"js_article card\" id=\"${character.char_id}\">\n    <span class=\"photobox\">\n      <img class=\"card_img\"\n        src=\"${character.img}\"\n        alt=\"characterImage\">\n        </span>\n        <div class =\"text\">\n          <h3 class=\"card_name\">${character.name}</h3>\n          <h3 class=\"card_status\">${character.status}</h3>\n        </div>\n    </article>\n    </li>`;\n    return html;\n\n}\nfunction addCharacterListeners (){\n  const allCards = document.querySelectorAll('.js_article');\n    for (const eachCard of allCards) {\n        eachCard.addEventListener('click', handleClick);\n    }\n} \nfunction handleClick(event){\n    //evento para concretamente que el currentTarget sobre donde est치 el evento, \n    //en nuestro caso en cada tarjeta\n    event.currentTarget.classList.toggle('selected');\n    //busca en el array aquel objeto que tiene el mismo char_id  que el char_id  del current Target\n    console.log(event.currentTarget.id);\n\n    //rellena el array de favoritos con lo qhe ha encontrado\n    const selectedCh = allCharacters.find((charac) => charac.id === event.currentTarget.id);\n\n    console.log(selectedCh);\n    favoritesCharacters.push(selectedCh);  \n    console.log(selectedCh);\n ////////////////////////////////////\n}\nfunction renderfavoriteCh (){\n  let html = '';\n  for (const eachCharacter of allCharacters) {\n    html +=  renderfavoriteCh (eachCharacter);\n  }\n  favoriteList.innerHTML = html;\n  //por ser un qSAll nos d치 un array\n\n}\n\nfunction renderAllCharacters (){\n    let html = '';\n    for (const eachCharacter of allCharacters) {\n      html +=  renderCharacter (eachCharacter);\n    }\n    characterList.innerHTML = html;\n    //por ser un qSAll nos d치 un array\n    const characterCard = document.querySelectorAll('.js_article');\n    //para recorrer el array que genera el qSAll asigna con el bucle el evento\n    for (const eachCard of characterCard) {\n        eachCard.addEventListener('click', handleClick);\n    }\n    addCharacterListeners ();\n}\n\naddCharacterListeners ();\n//Eventos\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n})\nsearchInput.addEventListener('input', () => {\n  const userSearch = searchInput.value.toLowerCase();\n\n  console.log(userSearch);\n  //variable para meter los personajes que coincidan con la busqueda\n  const filteredCharacters = allCharacters.filter((userSearch) => userSearch.name.toLowerCase().includes(userSearch));\n  ///////\n  //pinta los personajes filtrados\n  renderAllShips(filteredCharacters);\n});\n//c칩digo que que ejecuta al inicio de carga de la pagina\n\n\n\nfetch ('https://breakingbadapi.com/api/characters')\n.then ((response) => response.json())\n.then((data) => {\n    allCharacters = data;\n    renderAllCharacters ();\n   \n  });"]}